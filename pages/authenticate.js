import Image from 'next/image'
import Head from 'next/head'
import React, { useState, useEffect } from 'react'
import AmazonLogo from '../assets/Amazon_Logo.png'
import { toast } from 'react-hot-toast';
import { useDispatch, useSelector } from 'react-redux';
import { getUser, loginInitiate, registerInitiate, setUser } from '../features/authSlice';
import { useRouter } from 'next/router';
import { auth, provider } from '../Firebase';

const Authenticate = () => {

    const [isSignIn, setIsSignIn] = useState(true);
    const [email, setEmail] = useState("")
    const [password, setPassword] = useState("")
    const user = useSelector(getUser);
    let dispatch = useDispatch();
    const router = useRouter();

    useEffect(() => {

        auth.onAuthStateChanged((authUser) => {
            if (authUser) {
                dispatch(setUser(authUser))
                router.push("/")
                toast.success("Successfully logged in");
            } else {
                dispatch(setUser(null))
            }
        })
        // react/no-unescaped-entities
    }, [dispatch])

    const register = e => {
        e.preventDefault();
        dispatch(registerInitiate(email, password));
        setEmail("");
        setPassword("");
    }

    const signIn = (e) => {
        e.preventDefault();
        dispatch(loginInitiate(email, password))
        setEmail("");
        setPassword("");
    }

    const handleAuth = (e) => {
        e.preventDefault();
        if (!user) {
            auth.signInWithPopup(provider)
                .then(() => {
                    router.push("/");
                    toast.success("Authentication Successful");

                })
                .catch(() => {
                    setEmail('');
                    setPassword('');
                    toast.error("Logging In Failed");
                })
        }
    };

    console.log(user);

    return (
        <div className="flex flex-col items-center justify-center h-screen">
            <Head>
                <title>Authentication</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="relative flex items-center h-24 w-48">
                <Image src={AmazonLogo} layout="fill" alt="Amazon Logo" />
            </div>

            {
                isSignIn ? (
                    <div className="flex flex-col items-center w-[400px]">
                        <form className="border border-gray-300 rounded-[5px] flex flex-col p-[20px] h-fit" autoComplete="off">

                            <h2 className="authH2">SignIn</h2>
                            <h4 className="text-sm mb-2 font-semibold">Email</h4>
                            <input value={email} onChange={(e) => setEmail(e.target.value)} className="authInput" type="email" placeholder="Enter Email Address" autoComplete="off" />

                            <h4 className="text-sm mb-2 font-semibold">Password</h4>
                            <input value={password} onChange={(e) => setPassword(e.target.value)} className="authInput" type="password" placeholder="Enter Password" autoComplete="off" />

                            <button className="authButton" type="submit" onClick={signIn}>SignIn</button>

                            <p className="text-[13px] mt-2 ">SignIn using Google ?</p>

                            <button className="authButton" type="submit" onClick={handleAuth}>Google SignIn</button>
                            <p className="text-xs mt-2">By continuing, you agree to Amazon's Conditions of Use and Privacy Notice.</p>
                        </form>
                        <div className="flex flex-col items-center mt-5 w-[75%]">
                            <p className="text-gray-400">New to Amazon ?</p>
                            <button className="authButton" onClick={(state) => setIsSignIn(false)}>
                                Create Your Amazon Account
                            </button>
                        </div>

                    </div>
                ) : (
                    <div className="flex flex-col items-center w-[400px]">
                        <form className="border border-gray-300 rounded-[5px] flex flex-col p-[20px] h-fit w-[100%]" autoComplete="off">
                            <h2 className="authH2">SignUp</h2>

                            <h4 className="text-sm mb-2 font-semibold">Email</h4>
                            <input className="authInput" type="email" placeholder="Enter Email Address" value={email} onChange={(e) => setEmail(e.target.value)} autoComplete="off" />

                            <h4 className="text-sm mb-2 font-semibold">Password</h4>
                            <input className="authInput" type="password" placeholder="Enter Password" value={password} onChange={(e) => setPassword(e.target.value)} autoComplete="off" />

                            <button type="submit" onClick={register} className="authButton text-sm">SignUp</button>
                        </form>
                        <div className="flex flex-col items-center mt-5 w-[80%]">
                            <p className="text-gray-400">Already have an Account ? </p>
                            <button className="authButton text-sm" onClick={(state) => setIsSignIn(true)}>
                                SignIn into existing account</button>
                        </div>

                    </div>
                )
            }

        </div>
    )
}

export default Authenticate